{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EarthDataVis.jl Documentation \u00a4 EDV defines a set of recipes to work with data format common to Earth Data observations. The aim of this package is to easily plot in 2d and 3d data from these sources.","title":"Overview"},{"location":"#earthdatavisjl-documentation","text":"EDV defines a set of recipes to work with data format common to Earth Data observations. The aim of this package is to easily plot in 2d and 3d data from these sources.","title":"EarthDataVis.jl Documentation"},{"location":"examples/generated/tutorials/Basics/intro/","text":"Since EarthDataVis requires YAXArrays and GLMakie, we also install those and start using them as follows: using EarthDataVis , GLMakie using YAXArrays , Dates , Colors GLMakie . activate! () Then, first let's start by creating some test data for EDV. dates = Date ( 2021 , 1 , 1 ) : Day ( 1 ) : Date ( 2021 , 1 , 31 ) axlist = [ RangeAxis ( \"time\" , dates ), RangeAxis ( \"lon\" , range ( 1 , 10 , length = 15 )), RangeAxis ( \"lat\" , range ( 1 , 15 , length = 20 )), CategoricalAxis ( \"Variable\" , [ \"var1\" , \"var2\" ])] data = rand ( length ( dates ), 15 , 20 , 2 ) dsarr = YAXArray ( axlist , data ) YAXArray with the following dimensions time Axis with 31 Elements from 2021-01-01 to 2021-01-31 lon Axis with 15 Elements from 1.0 to 10.0 lat Axis with 20 Elements from 1.0 to 15.0 Variable Axis with 2 elements: var1 var2 Total size: 145.31 KB And plotting our first cube is done with plotcube ( dsarr ; kind = :voxel , colormap = :linear_bmy_10_95_c71_n256 ) using plotcube will generate a cube for one of the variables in dsarr . Note that different options are available. We will take a look at one of them. This page was generated using Literate.jl .","title":"Introduction"},{"location":"examples/generated/tutorials/timeseries/timeseries/","text":"using EarthDataVis using YAXArrays using CairoMakie # Unique location Let's consider a simple case, with only one location axlist = [ RangeAxis ( \"time\" , range ( 1 , 20 , length = 20 )), RangeAxis ( \"lon\" , [ - 67.4598 ]), RangeAxis ( \"lat\" , [ 34.4648 ]), ] data = rand ( 20 , 1 , 1 ) ds = YAXArray ( axlist , data ) YAXArray with the following dimensions time Axis with 20 Elements from 1.0 to 20.0 lon Axis with 1 Elements from -67.4598 to -67.4598 lat Axis with 1 Elements from 34.4648 to 34.4648 Total size: 160.0 bytes Getting the data back from YAXArray d = ds . data [ : , 1 , 1 ] 20-element Vector{Float64}: 0.1625630707979463 0.5386238568917924 0.14359523392292195 0.2641941118969031 0.7772885193003324 0.2685037974261948 0.09384912720296301 0.7361747637970811 0.9914839186782913 0.19937829478326485 7.262631079818505e-5 0.394691249279989 0.7734666974786845 0.2570333546369473 0.31756807693695754 0.33532252675643603 0.893971275984771 0.6783053318699893 0.9359346942557049 0.5734428196827501 Simple Plot lines ( d ) Adding labels fig , ax , obj = lines ( d ; label = \"y1\" , axis = (; xlabel = \"x\" , ylabel = \"\" ), figure = (; resolution = ( 600 , 400 )) ) axislegend ( ax ) fig # Selecting one location axlist = [ RangeAxis ( \"time\" , range ( 1 , 20 , length = 20 )), RangeAxis ( \"lon\" , range ( - 67.4598 , - 66.4598 , length = 2 )), RangeAxis ( \"lat\" , range ( - 34.4648 , - 33.4648 , length = 2 )), ] data = rand ( 20 , 2 , 2 ) ds = YAXArray ( axlist , data ) d = subsetcube ( ds , lon = - 67.4598 , lat =- 34.4648 ) . data lines ( d ) fig , ax , obj = lines ( d ; label = \"y1\" , axis = (; xlabel = \"x\" , ylabel = \"\" ), figure = (; resolution = ( 600 , 400 )) ) axislegend ( ax ) fig # Selecting location with an extra axis axlist = [ RangeAxis ( \"other\" , 1 : 4 ), RangeAxis ( \"time\" , range ( 1 , 20 , length = 20 )), RangeAxis ( \"lon\" , range ( - 67.4598 , - 66.4598 , length = 2 )), RangeAxis ( \"lat\" , range ( - 34.4648 , - 33.4648 , length = 2 )), ] data = rand ( 4 , 20 , 2 , 2 ) ds = YAXArray ( axlist , data ) d = subsetcube ( ds , lon = - 67.4598 , lat =- 34.4648 ) . data series ( d ) adding labels and colors fig , ax , obj = series ( d ; labels = [ \"y $ ( i ) \" for i in 1 : 4 ], # list of labels color = resample_cmap ( :mk_12 , 4 ), # list of colors for each line axis = (; xlabel = \"time\" , ylabel = \"\" ), figure = (; resolution = ( 600 , 400 )) ) axislegend ( ax ) fig This page was generated using Literate.jl .","title":"Plot time series"}]}