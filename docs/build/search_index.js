var documenterSearchIndex = {"docs":
[{"location":"intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"Since EarthDataVis requires YAXArrays and GLMakie, we also install those and start using them as follows:","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"using EarthDataVis, GLMakie, YAXArrays, Dates","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"First, let's start by creating some test data for EDP.","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"dates = Date(2021, 1, 1):Day(1):Date(2021, 1, 31)\naxlist = [\n    RangeAxis(\"time\", dates),\n    RangeAxis(\"lon\", range(1, 10, length=15)),\n    RangeAxis(\"lat\", range(1, 15, length=20)),\n    CategoricalAxis(\"Variable\", [\"var1\", \"var2\"])]\ndata = rand(length(dates), 15, 20, 2)\ndsarr = YAXArray(axlist, data)","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"Then using datacubeplot will generate a cube for one of the variables in dsarr. Note that different options are available. We will take a look at one of them.","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"datacubeplot(ds::YAXArray)","category":"page"},{"location":"intro/#EarthDataVis.datacubeplot-Tuple{YAXArray}","page":"Introduction","title":"EarthDataVis.datacubeplot","text":"datacubeplot(ds::YAXArray)\n\nCreates a plot as cube. Several options are available via Attributes..\n\nAttributes\n\nkind = :volume: possible options, volume, contour and voxel\nxname = :lon: this should usually be longitude\nyname = :lat: this should usually be latitude\ntname = :time\nvarname = nothing: Don't forget to pass your own\ncolormap=:Hiroshige\ncolor=nothing: voxel colors\nlevels=50: contour levels\naxvals=:counts: axis values by :counts, :vals and :vals_tscale\nmarkersize=nothing\nshading=false\ntransparency=false\n\n\n\n\n\n","category":"method"},{"location":"#EarthDataVis.jl-Documentation","page":"Home","title":"EarthDataVis.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"EDV defines a set of recipes to work with data format common to Earth Data observations. The aim of this package is to easily plot in 2d and 3d data from these sources.","category":"page"}]
}
